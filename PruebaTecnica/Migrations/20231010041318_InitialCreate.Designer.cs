// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnica.Repository;

#nullable disable

namespace PruebaTecnica.Migrations
{
    [DbContext(typeof(PruebaTecnicaContext))]
    [Migration("20231010041318_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaTecnica.Entities.Asignacion", b =>
                {
                    b.Property<int>("Idasignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idasignacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idasignacion"));

                    b.Property<DateTime>("FechaAsi")
                        .HasColumnType("date")
                        .HasColumnName("fecha_asi");

                    b.Property<int>("Idcurso")
                        .HasColumnType("int")
                        .HasColumnName("idcurso");

                    b.Property<int>("Iddocente")
                        .HasColumnType("int")
                        .HasColumnName("iddocente");

                    b.HasKey("Idasignacion");

                    b.HasIndex("Idcurso");

                    b.HasIndex("Iddocente");

                    b.ToTable("TB_ASIGNACION", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Curso", b =>
                {
                    b.Property<int>("Idcurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idcurso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcurso"));

                    b.Property<double>("CostCur")
                        .HasColumnType("float")
                        .HasColumnName("cost_cur");

                    b.Property<int>("DuraCur")
                        .HasColumnType("int")
                        .HasColumnName("dura_cur");

                    b.Property<string>("NombCur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nomb_cur");

                    b.HasKey("Idcurso");

                    b.ToTable("TB_CURSO", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Distrito", b =>
                {
                    b.Property<int>("Iddistrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iddistrito");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Iddistrito"));

                    b.Property<int>("Idprovincia")
                        .HasColumnType("int")
                        .HasColumnName("idprovincia");

                    b.Property<string>("NombDis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nomb_dis");

                    b.HasKey("Iddistrito");

                    b.HasIndex("Idprovincia");

                    b.ToTable("TB_DISTRITO", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Docente", b =>
                {
                    b.Property<int>("Iddocente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iddocente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Iddocente"));

                    b.Property<string>("ApelDoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("apel_doc");

                    b.Property<string>("DireDoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dire_doc");

                    b.Property<string>("GradDoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("grad_doc");

                    b.Property<int>("Idprofesion")
                        .HasColumnType("int")
                        .HasColumnName("idprofesion");

                    b.Property<string>("NcelDoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ncel_doc");

                    b.Property<string>("NombDoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nomb_doc");

                    b.Property<string>("NtelDoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ntel_doc");

                    b.HasKey("Iddocente");

                    b.HasIndex("Idprofesion");

                    b.ToTable("TB_DOCENTE", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Estudiante", b =>
                {
                    b.Property<int>("Idestudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idestudiante");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idestudiante"));

                    b.Property<string>("ApelEst")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("apel_est");

                    b.Property<string>("DireEst")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dire_est");

                    b.Property<DateTime>("FnacEst")
                        .HasColumnType("date")
                        .HasColumnName("fnac_est");

                    b.Property<string>("GinsEst")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gins_est");

                    b.Property<int>("Iddistrito")
                        .HasColumnType("int")
                        .HasColumnName("iddistrito");

                    b.Property<string>("NombEst")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nomb_est");

                    b.Property<string>("SexoEst")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sexo_est");

                    b.Property<string>("TcolEst")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tcol_est");

                    b.HasKey("Idestudiante");

                    b.HasIndex("Iddistrito");

                    b.ToTable("TB_ESTUDIANTE", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Matricula", b =>
                {
                    b.Property<int>("Idmatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idmatricula");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idmatricula"));

                    b.Property<DateTime>("FechaMat")
                        .HasColumnType("date")
                        .HasColumnName("fecha_mat");

                    b.Property<int>("Idcurso")
                        .HasColumnType("int")
                        .HasColumnName("idcurso");

                    b.Property<int>("Idestudiante")
                        .HasColumnType("int")
                        .HasColumnName("idestudiante");

                    b.HasKey("Idmatricula");

                    b.HasIndex("Idcurso");

                    b.HasIndex("Idestudiante");

                    b.ToTable("TB_MATRICULA", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Profesion", b =>
                {
                    b.Property<int>("Idprofesion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idprofesion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idprofesion"));

                    b.Property<string>("NombPro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nomb_pro");

                    b.HasKey("Idprofesion");

                    b.ToTable("TB_PROFESION", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Provincia", b =>
                {
                    b.Property<int>("Idprovincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idprovincia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idprovincia"));

                    b.Property<string>("NombPro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nomb_pro");

                    b.HasKey("Idprovincia");

                    b.ToTable("TB_PROVINCIA", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Entities.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("password");

                    b.HasKey("Username");

                    b.ToTable("TB_USER", (string)null);
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Asignacion", b =>
                {
                    b.HasOne("PruebaTecnica.Entities.Curso", "Curso")
                        .WithMany("Asignaciones")
                        .HasForeignKey("Idcurso")
                        .IsRequired()
                        .HasConstraintName("FK__ASIGNACION__CURSO");

                    b.HasOne("PruebaTecnica.Entities.Docente", "Docente")
                        .WithMany("Asignaciones")
                        .HasForeignKey("Iddocente")
                        .IsRequired()
                        .HasConstraintName("FK__ASIGNACION__DOCENTE");

                    b.Navigation("Curso");

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Distrito", b =>
                {
                    b.HasOne("PruebaTecnica.Entities.Provincia", "Provincia")
                        .WithMany("Distritos")
                        .HasForeignKey("Idprovincia")
                        .IsRequired()
                        .HasConstraintName("FK__DISTRITO__PROVINCIA");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Docente", b =>
                {
                    b.HasOne("PruebaTecnica.Entities.Profesion", "Profesion")
                        .WithMany("Docentes")
                        .HasForeignKey("Idprofesion")
                        .IsRequired()
                        .HasConstraintName("FK__DOCENTE__PROFESION");

                    b.Navigation("Profesion");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Estudiante", b =>
                {
                    b.HasOne("PruebaTecnica.Entities.Distrito", "Distrito")
                        .WithMany("Estudiantes")
                        .HasForeignKey("Iddistrito")
                        .IsRequired()
                        .HasConstraintName("FK__ESTUDIANTE__DISTRITO");

                    b.Navigation("Distrito");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Matricula", b =>
                {
                    b.HasOne("PruebaTecnica.Entities.Curso", "Curso")
                        .WithMany("Matriculas")
                        .HasForeignKey("Idcurso")
                        .IsRequired()
                        .HasConstraintName("FK__MATRICULA__CURSO");

                    b.HasOne("PruebaTecnica.Entities.Estudiante", "Estudiante")
                        .WithMany("Matriculas")
                        .HasForeignKey("Idestudiante")
                        .IsRequired()
                        .HasConstraintName("FK__MATRICULA__ESTUDIANTE");

                    b.Navigation("Curso");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Curso", b =>
                {
                    b.Navigation("Asignaciones");

                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Distrito", b =>
                {
                    b.Navigation("Estudiantes");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Docente", b =>
                {
                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Estudiante", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Profesion", b =>
                {
                    b.Navigation("Docentes");
                });

            modelBuilder.Entity("PruebaTecnica.Entities.Provincia", b =>
                {
                    b.Navigation("Distritos");
                });
#pragma warning restore 612, 618
        }
    }
}
